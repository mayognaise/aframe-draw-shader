(()=>{var t={184:(t,e)=>{e.canvas={schema:{width:{type:"number",default:256},height:{type:"number",default:256}},_canvas:null,_context:null,_texture:null,_setCanvas(t){return this._canvas=document.createElement("canvas"),this._updateTexture(t),this._context=this._canvas.getContext("2d"),this._texture=new THREE.Texture(this._canvas),this._clearCanvas(),this._texture},_clearCanvas(){this._canvas&&this._context&&this.__texture&&(this._context.clearRect(0,0,this._canvas.width,this._canvas.height),this._texture.needsUpdate=!0)},_updateTexture(t){this._canvas.width=t.width,this._canvas.height=t.height}}},790:(t,e)=>{e.fps={schema:{fps:{type:"number",default:0}},_fps:null,_nextTick:null,_setFps(t){this._fps=t.fps,this._nextTick=0},_setNextTick(){this._fps>0&&(this._nextTick=Date.now()+1e3/this._fps)},_fpsTick(t){t&&!this._isFpsPaused()&&(this._fps<=0?t():Date.now()>this._nextTick&&(this._setNextTick(),t()))},_pauseFpsTick(){this._nextTick=null},_resumeFpsTick(){this._nextTick=0},_isFpsPaused(){return"number"!=typeof this._nextTick}}},763:(t,e)=>{e.material={schema:{color:{type:"color"},fog:{default:!0}},_setMaterial(t){if(!t)throw"Texuture is not set";this.material=new THREE.MeshBasicMaterial({map:t}),this.el.sceneEl.addBehavior(this)},_updateMaterial(t){const{material:e}=this,s=this._getMaterialData(t);Object.keys(s).forEach((t=>{e[t]=s[t]}))},_getMaterialData:t=>({fog:t.fog,color:new THREE.Color(t.color)})}}},e={};function s(a){var i=e[a];if(void 0!==i)return i.exports;var h=e[a]={exports:{}};return t[a](h,h.exports,s),h.exports}(()=>{const{canvas:t}=s(184),{fps:e}=s(790),{material:a}=s(763);if("undefined"==typeof AFRAME)throw"Component attempted to register before AFRAME was available.";AFRAME.registerShader("draw",{...t,...e,...a,schema:{...t.schema,...e.schema,...a.schema},pause(){this._pauseFpsTick()},play(){this.paused()&&this._resumeFpsTick()},togglePlayback(){this.paused()?this.play():this.pause()},paused(){return this._isFpsPaused()},init(t){this._setFps(t);const e=this._setCanvas(t);if(this._setMaterial(e),!this.material)throw"Material is not set";return this.material},update(t){return this._updateMaterial(t),this._updateTexture(t),this._setFps(t),this.material},tick(){const t=this._canvas,e=this._context,s=this._texture;t&&e&&s&&this._fpsTick((()=>{this.el.emit("draw-render",{canvas:t,ctx:e,texture:s}),s.needsUpdate=!0}))}})})()})();
//# sourceMappingURL=aframe-draw-shader.js.map